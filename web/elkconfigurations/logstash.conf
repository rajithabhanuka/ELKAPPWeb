# logstash configuration
input {
  beats {
    port => 5000
    type => beat
  }
}

filter {
  dissect {
    mapping => {
      "message" => "%{apptime}::%{messagetype}::%{correlationId}::%{user_account}::%{country_code}::%{hotel_code}::%{message}"
    }
  }
#   grok {
#      patterns_dir => ["/etc/logstash/pattern"]
#      match => { "message" => "%{TOMCAT_DATESTAMP:timestamp}  %{LOGLEVEL:level}" }
#      add_tag => [ "level_%{level}" ]
#    }

#   date {
#      match => [ "timestamp", "YYYY-MM-dd HH:mm:ss.SSS" ]
#    }

if ("hotel_availability_request" in [messagetype] ) {
     mutate {
		add_field => { "index_key" => "hotel-availability-request" }
	}

dissect {
     mapping => {
         "message" => "%{message}::%{nodeid}"
	}
}
}
}
output {
      stdout {
          codec => rubydebug
      }

      elasticsearch {
         #index => "logs-%{[index_key]}-%{+YYYY.MM.dd}"
          index => "%{[index_key]}-%{+YYYY.MM.dd}"
          hosts => ["localhost:9200"]
      }
}

